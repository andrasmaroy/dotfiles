---

- name: Install fish
  community.general.homebrew:
    name:
      - fish
      - fisher

- name: Link fish dotfiles
  ansible.builtin.file:
    state: link
    src: "../../{{ playbook_dir | replace(lookup('env', 'HOME') + '/', '') }}/roles/fish/files/{{ item }}"
    dest: "~/.config/fish/{{ item }}"
    force: true
  loop:
    - config.fish
    - functions
    - conf.d
    - themes

- name: Get Homebrew prefix path
  ansible.builtin.shell: brew --prefix
  changed_when: false
  register: brew_prefix
  check_mode: false

- name: Add fish to /etc/shells
  ansible.builtin.lineinfile:
    path: /etc/shells
    line: "{{ brew_prefix.stdout }}/bin/fish"
    regexp: "^{{ brew_prefix.stdout }}/bin/fish$"
  become: true
  become_method: sudo

- name: Install fish-async-prompt
  ansible.builtin.shell:
    cmd: fisher install andrasmaroy/fish-async-prompt
    creates: "~/.config/fish/conf.d/__async_prompt.fish"
    executable: "{{ brew_prefix.stdout }}/bin/fish"

- name: Install fzf.fish
  ansible.builtin.shell:
    cmd: fisher install PatrickF1/fzf.fish
    creates: "~/.config/fish/conf.d/fzf.fish"
    executable: "{{ brew_prefix.stdout }}/bin/fish"

- name: Install Puffer Fish
  ansible.builtin.shell:
    cmd: fisher install nickeb96/puffer-fish
    creates: "~/.config/fish/conf.d/puffer_fish_key_bindings.fish"
    executable: "{{ brew_prefix.stdout }}/bin/fish"

- name: Install done
  ansible.builtin.shell:
    cmd: fisher install franciscolourenco/done
    creates: "~/.config/fish/conf.d/done.fish"
    executable: "{{ brew_prefix.stdout }}/bin/fish"

- name: Check if virtualfish is installed
  ansible.builtin.shell:
    cmd: vf
    executable: "{{ brew_prefix.stdout }}/bin/fish"
  register: vf_result
  check_mode: false
  changed_when: false
  failed_when: result.rc != 0 and result.rc != 127

- name: Install virtualfish
  ansible.builtin.shell:
    cmd: vf install compat_aliases
    creates: "~/.config/fish/conf.d/virtualfish-loader.fish"
    executable: "{{ brew_prefix.stdout }}/bin/fish"
  when: vf_result.rc == 0
